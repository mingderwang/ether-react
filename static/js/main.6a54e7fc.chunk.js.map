{"version":3,"sources":["../../src/utils/time.ts","../../src/ExampleComponent.tsx","App.tsx","index.tsx"],"names":["today","Promise","resolve","setTimeout","ExampleComponent","text","useState","useEffect","MetaMaskWalletProvider","a","walletProvider","provider","ethers","window","signer","console","addr","sdk","output","reject","Error","setAccount","alert","timer","setVal","v","className","styles","App","log","ReactDOM","render","document","getElementById"],"mappings":"yXAAgBA,IACd,OAAO,IAAIC,SAAeC,YACxBC,YAAW,kBAAMD,EAAQ,IAAf,QAAVC,Q,ICUSC,EAAmB,SAAC,GAAD,IAC9B,EADiCC,EAAH,EAAGA,KAEjC,EAAsBC,mBAAtB,sBAAM,EAAN,KAAM,EAAN,KACA,EAAkBA,oBAAlB,GAAM,EAAN,oBACA,EAA8BA,mBAA9B,mCAAM,EAAN,KAAM,EAAN,KAkCA,OAhCAC,qBAAU,WACHC,yBAAL,SAGE,uCAAC,oCAAAC,EAAA,0DACC,OADD,iCAEgCD,yBAA7B,UAFH,cAESE,EAFT,OAGSC,EAAW,IAAIC,mBAAJ,aAAkCC,OAAnD,UACMC,EAASH,EAAf,YACAI,eALH,SAMsBD,EAAnB,aANH,cAMSE,EANT,OAOGD,eACAA,iCACAE,EAAM,IAAI,EAAJ,IAANA,GATH,UAUwBA,EAArB,cAVH,eAUSC,EAVT,OAWGH,yBAXH,UAYSf,IAZT,yBDfE,IAAIC,SAAgBkB,YACzBhB,YAAW,kBAAMgB,EAAO,IAAIC,MAAlB,cAAVjB,QCcG,QAcGkB,EAAWH,EAAXG,SAdH,4CAAD,uDAFAC,0CAFJf,IAyBAA,qBAAU,WACR,IAAMgB,EAAQV,OAAA,aAAmB,WAC/BW,GAAQC,YAAD,OAAeA,EAAtBD,OADF,KAGA,OAAO,kBAAMX,qBAAb,MAJFN,IAOO,+BAAKmB,UAAWC,GAAhB,uDAAP,ICrCaC,G,OARH,WAKV,OAJA,uCAAC,sBAAAnB,EAAA,sEACOT,IADP,2CAAD,uDAGAe,QAAQc,IAAIzB,GACL,kBAAC,EAAD,CAAkBC,KAAK,uBCJhCyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6a54e7fc.chunk.js","sourcesContent":["export function today(): Promise<Date> {\n  return new Promise<Date>((resolve) => {\n    setTimeout(() => resolve(new Date), 1000);\n  })\n}\n\nexport function tomorrow(): Promise<Error> {\n  return new Promise<Error>((reject) => {\n    setTimeout(() => reject(new Error(\"Whoops!\")), 1000);\n  })\n}\n","import * as React from 'react'\nimport { useState, useEffect } from \"react\";\nimport styles from './styles.module.css'\nimport { Sdk, MetaMaskWalletProvider } from 'etherspot'\nimport { ethers } from 'ethers'\nimport { today, tomorrow } from './utils'\n\ninterface Props {\n  text: string\n}\ndeclare let window: any;\n\nexport const ExampleComponent = ({ text }: Props) => {\n  let sdk: Sdk\n  const [val, setVal] = useState(0)\n  const [chainId] = useState(-1)\n  const [account, setAccount] = useState('ðŸ‘»');\n\n  useEffect(() => {\n    if (!MetaMaskWalletProvider.detect()) {\n      alert('Please install metamask first.')\n    } else {\n      (async function run() {\n        if (window) {\n          const walletProvider = await MetaMaskWalletProvider.connect();\n          const provider = new ethers.providers.Web3Provider(window.ethereum)\n          const signer = provider.getSigner()\n          console.log(signer)\n          const addr = await signer.getAddress()\n          console.log(addr)\n          console.log('AAAAxxx.signer ', signer)\n          sdk = new Sdk(walletProvider)\n          const output = await sdk.syncAccount();\n          console.log('account', output);\n          await today()\n          await tomorrow()\n          setAccount(output.address)\n\n        }\n      })();\n    }\n  }, []);\n\n  useEffect(() => {\n    const timer = window.setInterval(() => {\n      setVal((v: number) => v + 1);\n    }, 1000);\n    return () => window.clearInterval(timer);\n  }, []);\n\n  return <div className={styles.test}>\n    ðŸ‘‘ Ethereum: {text} {val} {account} chainId: 0x{chainId}\n  </div>\n}","import React from 'react'\n\nimport { ExampleComponent, today } from 'ether-react'\nimport 'ether-react/dist/index.css'\n\nconst App = () => {\n  (async function run() {\n    await today()\n  })()\n  console.log(ExampleComponent)\n  return <ExampleComponent text=\"CC- ðŸ˜„\" />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}